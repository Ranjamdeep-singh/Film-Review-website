// ------------------ src/App.jsx ------------------
import { useState, useEffect } from 'react'
import axios from 'axios'

// ---------- main app ----------
export default function App() {
  const [apiKey, setApiKey] = useState(import.meta.env.VITE_TMDB_KEY || '')
  const [movies, setMovies] = useState([])
  const [currentUser, setCurrentUser] = useState(null)
  const [users, setUsers] = useState([])
  const [reviews, setReviews] = useState([])

  useEffect(() => {
    if (apiKey) {
      axios.get(`https://api.themoviedb.org/3/trending/movie/day?api_key=${apiKey}`)
        .then(res => setMovies(res.data.results))
        .catch(err => console.error('TMDB fetch error:', err))
    }
  }, [apiKey])

  function handleRegister(username, password) {
    if (users.find(u => u.username === username)) return 'User already exists.'
    const newUser = { username, password }
    setUsers([...users, newUser])
    setCurrentUser(newUser)
    return ''
  }

  function handleLogin(username, password) {
    const user = users.find(u => u.username === username && u.password === password)
    if (!user) return 'Invalid username or password.'
    setCurrentUser(user)
    return ''
  }

  function handleLogout() {
    setCurrentUser(null)
  }

  function handleAddReview(movie, rating, text) {
    const newReview = { movieId: movie.id, user: currentUser.username, rating, text }
    setReviews([...reviews, newReview])
  }

  const appStyle = {
    backgroundColor: '#003d24',
    minHeight: '100vh',
    color: '#eafff1',
    padding: '20px',
    fontFamily: 'Arial, sans-serif'
  }

  return (
    <div style={appStyle}>
      <h1>ðŸŽ¬ Film Review Website</h1>

      <AuthBox onRegister={handleRegister} onLogin={handleLogin} />
      {currentUser && (
        <div style={{ marginTop: 10 }}>
          Logged in as <strong>{currentUser.username}</strong>
          <button onClick={handleLogout} style={dangerButton}>Logout</button>
        </div>
      )}

      <hr style={{ borderColor: 'rgba(255,255,255,0.06)', margin: '12px 0' }} />

      <h2>Trending Movies</h2>
      {apiKey ? (
        movies.length ? (
          <div style={{ display: 'grid', gridTemplateColumns: 'repeat(auto-fit, minmax(160px, 1fr))', gap: 16 }}>
            {movies.map(movie => (
              <div key={movie.id} style={{ background: 'rgba(0,0,0,0.15)', borderRadius: 12, padding: 12 }}>
                <img
                  src={`https://image.tmdb.org/t/p/w200${movie.poster_path}`}
                  alt={movie.title}
                  style={{ borderRadius: 8, width: '100%' }}
                />
                <h3 style={{ fontSize: 16, margin: '8px 0' }}>{movie.title}</h3>
                <ReviewForm movie={movie} onAdd={handleAddReview} currentUser={currentUser} />
                <div style={{ marginTop: 6 }}>
                  {reviews.filter(r => r.movieId === movie.id).map((r, i) => (
                    <div key={i} style={{ fontSize: 13, borderTop: '1px solid rgba(255,255,255,0.08)', marginTop: 4, paddingTop: 4 }}>
                      <strong>{r.user}</strong>: {r.text} ({r.rating}/10)
                    </div>
                  ))}
                </div>
              </div>
            ))}
          </div>
        ) : (
          <div>Loading movies...</div>
        )
      ) : (
        <div>
          <h4>Enter your TMDB API Key</h4>
          <input
            placeholder="Paste TMDB key here"
            value={apiKey}
            onChange={e => setApiKey(e.target.value)}
            style={inputStyle}
          />
          <div style={{ fontSize: 12, marginTop: 6 }}>Tip: store your key in .env for safety.</div>
        </div>
      )}

      <footer style={{ marginTop: 40, opacity: 0.8, fontSize: 13 }}>
        Demo app â€” Data from TMDB. Reviews are stored locally.
      </footer>
    </div>
  )
}

// ---------- small subcomponents & styles ----------
const inputStyle = {
  padding: '8px 10px',
  borderRadius: 8,
  border: '1px solid rgba(255,255,255,0.06)',
  background: 'rgba(0,0,0,0.06)',
  color: 'inherit',
  flex: 1
}

const buttonStyle = {
  padding: '8px 10px',
  borderRadius: 8,
  border: 'none',
  marginLeft: 6,
  cursor: 'pointer',
  background: 'linear-gradient(180deg,#1b7a4f,#0e5c3a)',
  color: '#eafff1'
}

const mutedButton = {
  ...buttonStyle,
  background: 'transparent',
  border: '1px solid rgba(255,255,255,0.06)',
  color: '#dfffe8'
}

const dangerButton = {
  ...buttonStyle,
  background: 'linear-gradient(180deg,#7a1b1b,#5c0e0e)'
}

// ---------- AuthBox ----------
function AuthBox({ onRegister, onLogin }) {
  const [mode, setMode] = useState('login')
  const [username, setUsername] = useState('')
  const [password, setPassword] = useState('')
  const [err, setErr] = useState('')

  function submit(e) {
    e.preventDefault()
    setErr('')
    const r = mode === 'login' ? onLogin(username, password) : onRegister(username, password)
    if (r) setErr(r)
    else { setUsername(''); setPassword('') }
  }

  return (
    <form onSubmit={submit} style={{ display: 'flex', gap: 8, alignItems: 'center', flexWrap: 'wrap' }}>
      <input value={username} onChange={e => setUsername(e.target.value)} placeholder="username" style={{ ...inputStyle, width: 120 }} />
      <input type="password" value={password} onChange={e => setPassword(e.target.value)} placeholder="password" style={{ ...inputStyle, width: 120 }} />
      <button type="submit" style={buttonStyle}>{mode === 'login' ? 'Login' : 'Register'}</button>
      <button type="button" onClick={() => setMode(mode === 'login' ? 'register' : 'login')} style={mutedButton}>
        {mode === 'login' ? 'Switch to register' : 'Switch to login'}
      </button>
      {err && <div style={{ color: '#ffc4c4', marginTop: 4 }}>{err}</div>}
    </form>
  )
}

// ---------- ReviewForm ----------
function ReviewForm({ movie, onAdd, currentUser }) {
  const [rating, setRating] = useState(8)
  const [text, setText] = useState('')
  const [msg, setMsg] = useState('')

  function submit(e) {
    e.preventDefault()
    setMsg('')
    if (!currentUser) { setMsg('Login to post reviews.'); return }
    if (!text) { setMsg('Please write a short review.'); return }
    onAdd(movie, rating, text)
    setText('')
    setRating(8)
    setMsg('Saved locally.')
  }

  return (
    <form onSubmit={submit} style={{ marginTop: 6, display: 'grid', gap: 8 }}>
      <div style={{ display: 'flex', gap: 8, alignItems: 'center' }}>
        <label style={{ minWidth: 60 }}>Rating</label>
        <input type="number" min={1} max={10} value={rating} onChange={e => setRating(e.target.value)} style={{ width: 80, ...inputStyle }} />
        <div style={{ fontSize: 12, opacity: 0.8 }}>
          {currentUser ? `Posting as ${currentUser.username}` : 'Log in to post'}
        </div>
      </div>
      <textarea
        value={text}
        onChange={e => setText(e.target.value)}
        rows={4}
        placeholder="Write your review..."
        style={{ padding: 8, borderRadius: 8 }}
      />
      <div>
        <button type="submit" style={buttonStyle}>Post review</button>
        {msg && <span style={{ marginLeft: 8 }}>{msg}</span>}
      </div>
    </form>
  )
}
